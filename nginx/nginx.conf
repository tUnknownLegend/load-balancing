# This number should be, at maximum, the number of CPU cores on your system. 
worker_processes 2;

# Number of file descriptors used for Nginx.
worker_rlimit_nofile 20000;

# Only log critical errors.
error_log /var/log/nginx/error.log crit;

events {
    # Determines how many clients will be served by each worker process.
    worker_connections 2048;

    # The effective method, used on Linux 2.6+, optmized to serve many clients with each thread.
    use epoll;
}

http {
    # Caches information about open FDs, freqently accessed files.
    open_file_cache max=131072 inactive=16s; 
    open_file_cache_valid 32s; 
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Disable access log altogether.
    access_log off;

    # Sendfile copies data between one FD and other from within the kernel.
    sendfile on; 

    # Causes nginx to attempt to send its HTTP response head in one packet,  instead of using partial frames.
    tcp_nopush on;

    # Timeout for keep-alive connections. Server will close connections after this time.
    keepalive_timeout 32;

    # Number of requests a client can make over the keep-alive connection.
    keepalive_requests 1024;

    # Allow the server to close the connection after a client stops responding. 
    reset_timedout_connection on;

    # Send the client a "request timed out" if the body is not loaded by this time.
    client_body_timeout 8;

    # If the client stops reading data, free up the stale client connection after this much time.
    send_timeout 2;

    upstream server {
        server 95.163.214.47:5000 max_fails=2 fail_timeout=4s;
        server 89.208.197.225:5000 max_fails=2 fail_timeout=4s;
        server 5.188.140.11:5000 max_fails=2 fail_timeout=4s;
    }

    server {
        listen 80;

        location / {
            proxy_connect_timeout 32ms;
            proxy_send_timeout 64ms;
            proxy_read_timeout 64ms;

            proxy_next_upstream error timeout http_500;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 128ms;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://server/;
        }
    }

    server {
        listen 8080;

        location = /stub_status {
            stub_status;
        }
    }
}
